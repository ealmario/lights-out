{"version":3,"sources":["components/Cell.js","components/utilities/Button.js","components/Board.js","components/TitleScreen.js","components/ObjectivesScreen.js","components/SettingsScreen.js","App.js","serviceWorker.js","index.js"],"names":["StyledTD","styled","td","_templateObject","Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","evt","flipCellsAroundMe","react_default","a","createElement","className","isLit","onClick","Component","StyledDiv","div","Button_templateObject","Button","variantSettings","variant","_this$props","text","role","concat","Board_templateObject","Board","state","hasWon","board","createBoard","clicks","handleFromGameStart","addClicks","nrows","ncols","chanceLightStartsOn","y","row","x","push","Math","random","coord","_this$props2","_coord$split$map","split","map","Number","_coord$split$map2","slicedToArray","flipCell","every","cell","setState","_this2","_this$props3","tblBoard","_loop","coordinate","components_Cell","key","flipCellsAround","e","preventDefault","fromGameStart","_this$state","Board_StyledDiv","utilities_Button","renderBoard","TitleScreen_templateObject","TitleScreen","handleGameStart","handleObjectives","handleSettings","onGameStart","onObjectives","onSettings","gameStart","TitleScreen_StyledDiv","Fragment","ObjectivesScreen_templateObject","ObjectivesScreen","handleBackToTitleScreen","fromObjectives","ObjectivesScreen_StyledDiv","SettingsScreen_templateObject","SettingsScreen","handleChangeBoard","fromSettings","value","parseInt","target","changeBoardSize","console","log","SettingsScreen_StyledDiv","htmlFor","name","id","onChange","defaultValue","AppDiv","App_templateObject","Footer","_templateObject2","App","objectives","settings","inp","components_TitleScreen","components_Board","components_ObjectivesScreen","components_SettingsScreen","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5c51bf4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTD = styled.td`\r\n  height: 3.75rem;\r\n  width: 3.75rem;\r\n\r\n  .cell {\r\n    background-color: #424242;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    height: 95%;\r\n    width: 95%;\r\n    transition: 300ms ease;\r\n\r\n    &:hover {\r\n      background-color: #525252;\r\n    }\r\n  }\r\n\r\n  .cell-lit {\r\n    background-color: #6ea5d8;\r\n    box-shadow: 0px 0px 16px rgba(51,125,193, 1);\r\n\r\n    &:hover {\r\n      background-color: #8eb9e1;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 425px) {\r\n    height: 4.25rem;\r\n    width: 4.25rem;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: 6.25rem;\r\n    width: 6.25rem;\r\n  }\r\n`\r\n\r\n/** A single cell on the board.\r\n *\r\n * This has no state --- just two props:\r\n *\r\n * - flipCellsAroundMe: a function rec'd from the board which flips this\r\n *      cell and the cells around of it\r\n *\r\n * - isLit: boolean, is this cell lit?\r\n *\r\n * This handles clicks --- by calling flipCellsAroundMe\r\n *\r\n **/\r\n\r\nclass Cell extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(evt) {\r\n    // call up to the board to flip cells around this cell\r\n    this.props.flipCellsAroundMe();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <StyledTD>\r\n          <div className={this.props.isLit ? 'cell cell-lit' : 'cell'} onClick={this.handleClick}></div>\r\n        </StyledTD>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Cell","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDiv = styled.div`\r\n  .btn {\r\n    border: none;\r\n    border-radius: 8px;\r\n    box-shadow: 0px 4px 8px rgba(0,0,0,0.2);\r\n    font-family: 'Poppins', sans-serif;\r\n    font-size: 0.8125;\r\n    font-weight: 600;\r\n    margin-bottom: 0.8125rem;\r\n    letter-spacing: 0.25px;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    transition: 300ms ease;\r\n    width: 130px;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      box-shadow: 0px 4px 16px rgba(0,0,0,0.15);\r\n    }\r\n\r\n    &:active {\r\n      box-shadow: 0px 4px 4px rgba(0,0,0,0.3);\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  .btn-solid {\r\n    background-color: #66ccff;\r\n\r\n    &:hover {\r\n      background-color: #70cfff;\r\n    }\r\n  }\r\n\r\n  .btn-outline {\r\n    border: 2px solid #66ccff;\r\n    background: none;\r\n    color: #66ccff;\r\n\r\n    &:hover {\r\n      background-color: #66ccff;\r\n      color: #303030;\r\n    }\r\n  }\r\n\r\n`\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    let variantSettings;\r\n\r\n    switch (this.props.variant) {\r\n      case 'solid':\r\n        variantSettings = 'solid';\r\n        break;\r\n      case 'outline':\r\n        variantSettings = 'outline';\r\n        break;\r\n      case 'text':\r\n        variantSettings = 'text';\r\n        break;\r\n      default:\r\n        variantSettings = 'solid';\r\n    }\r\n\r\n    const { text, onClick } = this.props;\r\n    \r\n    return(\r\n      <StyledDiv role=\"button\">\r\n        <button className={`btn btn-${variantSettings}`} onClick={onClick}>{text}</button>\r\n      </StyledDiv>\r\n    )\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport default Button;","import React, { Component } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport Cell from \"./Cell\";\r\nimport Button from './utilities/Button';\r\n\r\nconst StyledDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  .clicks {\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  .btn-container {\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  @media screen and (min-width: 425px) {\r\n   .btn-container{\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 100%;\r\n   }\r\n\r\n   @media screen and (min-width: 768px){\r\n     .btn-container {\r\n       width: 90%;\r\n     }\r\n   }\r\n  }\r\n`\r\n\r\n/** Game board of Lights out.\r\n *\r\n * Properties:\r\n *\r\n * - nrows: number of rows of board\r\n * - ncols: number of cols of board\r\n * - chanceLightStartsOn: float, chance any cell is lit at start of game\r\n *\r\n * State:\r\n *\r\n * - hasWon: boolean, true when board is all off\r\n * - board: array-of-arrays of true/false\r\n *\r\n *    For this board:\r\n *       .  .  .\r\n *       O  O  .     (where . is off, and O is on)\r\n *       .  .  .\r\n *\r\n *    This would be: [[f, f, f], [t, t, f], [f, f, f]]\r\n *\r\n *  This should render an HTML table of individual <Cell /> components.\r\n *\r\n *  This doesn't handle any clicks --- clicks are on individual cells\r\n *\r\n **/\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // TODO: set initial state\r\n    this.state = {\r\n      hasWon: false,\r\n      board: this.createBoard(),\r\n      clicks: 0\r\n    }\r\n\r\n    this.handleFromGameStart = this.handleFromGameStart.bind(this);\r\n    this.addClicks = this.addClicks.bind(this);\r\n  }\r\n\r\n  /** create a board nrows high/ncols wide, each cell randomly lit or unlit */\r\n\r\n  createBoard() {\r\n    let board = [];\r\n    const { nrows, ncols, chanceLightStartsOn } = this.props;\r\n    // TODO: create array-of-arrays of true/false values\r\n\r\n    // Rows\r\n    for (let y = 0; y < nrows; y++) {\r\n      let row = [];\r\n\r\n      // Columns\r\n      for (let x = 0; x < ncols; x++) {\r\n        // To decide whether the cell is on or off\r\n        // Returns a boolean value\r\n        row.push(Math.random() < chanceLightStartsOn);\r\n      }\r\n\r\n      // Build the row\r\n      board.push(row);\r\n    }\r\n\r\n    return board\r\n  }\r\n\r\n  /** handle changing a cell: update board & determine if winner */\r\n\r\n  flipCellsAround(coord) {\r\n    let {ncols, nrows} = this.props;\r\n    let { board } = this.state;\r\n    let [y, x] = coord.split(\"-\").map(Number);\r\n\r\n    function flipCell(y, x) {\r\n      // if this coord is actually on board, flip it\r\n\r\n      if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\r\n        board[y][x] = !board[y][x];\r\n      }\r\n    }\r\n\r\n    // Flip initial cell and its neighbors\r\n    flipCell(y,x);\r\n    // Left\r\n    flipCell(y, x - 1);\r\n    // Right\r\n    flipCell(y, x + 1);\r\n    // Top\r\n    flipCell(y + 1, x);\r\n    // Bottom\r\n    flipCell(y - 1, x);\r\n\r\n    this.addClicks();\r\n\r\n    // win when every cell is turned off\r\n    // TODO: determine is the game has been won\r\n    let hasWon = board.every(row => row.every(cell => !cell));\r\n    this.setState({board, hasWon});\r\n  }\r\n\r\n  // Add clicks\r\n  addClicks() {\r\n    let clicks = this.state.clicks;\r\n    clicks++\r\n\r\n    this.setState({clicks});\r\n  }\r\n\r\n  /** Render game board or winning message. */\r\n\r\n  renderBoard() {\r\n    const { board } = this.state;\r\n    const { nrows, ncols } = this.props;\r\n    let tblBoard = [];\r\n\r\n    for (let y = 0; y < nrows; y++) {\r\n      let row = [];\r\n      \r\n      for (let x = 0; x < ncols; x++) {\r\n        let coordinate = `${y}-${x}`\r\n        row.push(<Cell isLit={board[y][x]} key={coordinate} flipCellsAroundMe={() => this.flipCellsAround(coordinate)}/>)\r\n      }\r\n\r\n      tblBoard.push(<tr key={y}>{row}</tr>)\r\n    }\r\n\r\n    return (\r\n      <table>\r\n        <tbody>{tblBoard}</tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\n  handleFromGameStart(e) {\r\n    e.preventDefault();\r\n    this.props.fromGameStart();\r\n  }\r\n\r\n  render() {\r\n    const { hasWon, clicks } = this.state;\r\n\r\n    return hasWon ? (\r\n      // if the game is won, just show a winning msg & render nothing else\r\n      <StyledDiv>\r\n        <h2 className=\"title\">You have won!</h2>\r\n        <p className=\"clicks\">Number of Clicks: {clicks}</p>\r\n        <div className=\"btn-container\">\r\n          <Button text=\"Back\" variant=\"solid\" onClick={this.handleFromGameStart} />\r\n        </div>\r\n      </StyledDiv>\r\n    ) : (\r\n      // make table board\r\n      <StyledDiv>\r\n        {this.renderBoard()}\r\n        <div className=\"btn-container\">\r\n          <Button text=\"Back\" variant=\"solid\" onClick={this.handleFromGameStart} />\r\n        </div>\r\n      </StyledDiv>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport Button from './utilities/Button';\r\n\r\nconst StyledDiv = styled.div`\r\n  @font-face {\r\n  font-family: neon;\r\n  src: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/707108/neon.ttf);\r\n  }\r\n\r\n  .title-screen,\r\n  .btn-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .header {\r\n    margin-bottom: 3rem;\r\n  }\r\n  \r\n  .neon {\r\n    font-family: neon;\r\n    color: #FB4264;\r\n    font-size: 3rem;\r\n    text-shadow: 0 0 3vw #F40A35;\r\n  }\r\n\r\n  .flux {\r\n    font-family: neon;\r\n    color: #426DFB;\r\n    font-size: 3rem;\r\n    text-shadow: 0 0 3vw #2356FF;\r\n  }\r\n\r\n  .neon {\r\n    animation: neon 1s ease infinite;\r\n    -moz-animation: neon 1s ease infinite;\r\n    -webkit-animation: neon 1s ease infinite;\r\n  }\r\n\r\n  @keyframes neon {\r\n    0%,\r\n    100% {\r\n      text-shadow: 0 0 1vw #FA1C16, 0 0 3vw #FA1C16, 0 0 10vw #FA1C16, 0 0 10vw #FA1C16, 0 0 .4vw #FED128, .5vw .5vw .1vw #806914;\r\n      color: #FED128;\r\n    }\r\n    50% {\r\n      text-shadow: 0 0 .5vw #800E0B, 0 0 1.5vw #800E0B, 0 0 5vw #800E0B, 0 0 5vw #800E0B, 0 0 .2vw #800E0B, .5vw .5vw .1vw #40340A;\r\n      color: #806914;\r\n    }\r\n  }\r\n\r\n  .flux {\r\n    animation: flux 2s linear infinite;\r\n    -moz-animation: flux 2s linear infinite;\r\n    -webkit-animation: flux 2s linear infinite;\r\n    -o-animation: flux 2s linear infinite;\r\n  }\r\n\r\n  @keyframes flux {\r\n    0%,\r\n    100% {\r\n      text-shadow: 0 0 1vw #1041FF, 0 0 3vw #1041FF, 0 0 10vw #1041FF, 0 0 10vw #1041FF, 0 0 .4vw #8BFDFE, .5vw .5vw .1vw #147280;\r\n      color: #28D7FE;\r\n    }\r\n    50% {\r\n      text-shadow: 0 0 .5vw #082180, 0 0 1.5vw #082180, 0 0 5vw #082180, 0 0 5vw #082180, 0 0 .2vw #082180, .5vw .5vw .1vw #0A3940;\r\n      color: #146C80;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .neon, .flux {\r\n      font-size: 6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nclass TitleScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleGameStart = this.handleGameStart.bind(this);\r\n        this.handleObjectives = this.handleObjectives.bind(this);\r\n        this.handleSettings = this.handleSettings.bind(this);\r\n    }\r\n\r\n    handleGameStart(e) {\r\n        e.preventDefault();\r\n        this.props.onGameStart();\r\n    }\r\n\r\n    handleObjectives(e) {\r\n        e.preventDefault();\r\n        this.props.onObjectives();\r\n    }\r\n\r\n    handleSettings(e) {\r\n        e.preventDefault();\r\n        this.props.onSettings();\r\n    }\r\n\r\n    render () {\r\n      const { gameStart } = this.props;\r\n      return(\r\n        <StyledDiv>\r\n          <h1 className=\"header\">\r\n            <span className=\"neon\">Lights</span> \r\n            <span className=\"flux\">Out</span>\r\n          </h1>\r\n          <div className=\"btn-container\">\r\n              {!gameStart && (\r\n                  <>\r\n                      <Button text=\"Start\" variant=\"solid\" onClick={this.handleGameStart} />\r\n                      <Button text=\"Objectives\" variant=\"outline\" onClick={this.handleObjectives} />\r\n                      <Button text=\"Settings\" variant=\"outline\" onClick={this.handleSettings} />\r\n                  </>\r\n              )}\r\n          </div>\r\n        </StyledDiv>\r\n      )\r\n    }\r\n}\r\n\r\nexport default TitleScreen;\r\n\r\nTitleScreen.propTypes = {\r\n  gameStart: PropTypes.bool,\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Button from './utilities/Button';\r\n\r\nconst StyledDiv = styled.div`\r\n  background-color: rgba(0,0,0,0.45);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;   \r\n  z-index: 2;\r\n\r\n  .container {\r\n    background: #424242;\r\n    border-radius: 4px;\r\n    box-shadow: 2px 4px 8px rgba(0,0,0,0.25);\r\n    padding: 4rem 2rem;\r\n    width: 90%;\r\n\r\n    h2 {\r\n        margin-bottom: 3rem;\r\n    }\r\n\r\n    p {\r\n        margin-bottom: 3rem;\r\n        line-height: 1.5rem;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .container {\r\n      width: 500px;\r\n    }\r\n  }\r\n`;\r\n\r\nclass ObjectivesScreen extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.handleBackToTitleScreen = this.handleBackToTitleScreen.bind(this);\r\n    }\r\n\r\n    handleBackToTitleScreen() {\r\n        this.props.fromObjectives();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <StyledDiv>\r\n                <div className=\"container\">\r\n                    <h2>Objectives</h2>\r\n\r\n                    <p>Originally developed by Tiger Electronics back in 1995, Lights Out is a puzzle game that involves the player turning off all the lights in the board with the least possible amount of clicks</p>\r\n\r\n                    <Button text=\"Back\" variant=\"solid\" onClick={this.handleBackToTitleScreen}/>\r\n\r\n                </div>\r\n            </StyledDiv>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ObjectivesScreen;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Button from './utilities/Button';\r\n\r\nconst StyledDiv = styled.div`\r\n  background-color: rgba(0,0,0,0.45);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;   \r\n  z-index: 2;\r\n\r\n  .container {\r\n    background: #424242;\r\n    border-radius: 4px;\r\n    box-shadow: 2px 4px 8px rgba(0,0,0,0.25);\r\n    padding: 4rem 2rem;\r\n    width: 90%;\r\n\r\n    h2 {\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    p {\r\n        font-size: 0.75rem;\r\n        margin-bottom: 2rem;\r\n    }\r\n  }\r\n\r\n  .content {\r\n      margin-bottom: 2rem;\r\n  }\r\n\r\n  label, \r\n  select {\r\n      font-size: 1rem;\r\n  }\r\n\r\n  select {\r\n    margin-left: 1rem;\r\n    padding: 0.5rem 1rem;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .container {\r\n      width: 500px;\r\n    }\r\n  }\r\n`\r\n\r\nclass SettingsScreen extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.handleBackToTitleScreen = this.handleBackToTitleScreen.bind(this);\r\n        this.handleChangeBoard = this.handleChangeBoard.bind(this);\r\n    }\r\n\r\n    handleBackToTitleScreen() {\r\n        this.props.fromSettings();\r\n    }\r\n\r\n    handleChangeBoard(e) {\r\n        const value = parseInt(e.target.value);\r\n        this.props.changeBoardSize(value);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        console.log(this.props.ncols);\r\n        console.log(this.props.nrows);\r\n        return(\r\n            <StyledDiv>\r\n                <div className=\"container\">\r\n                    <h2>Settings</h2>\r\n                    <p>Changes are automatically saved</p>\r\n                    <div className=\"content\">\r\n                        <label htmlFor=\"board-size\">Board Size:</label>\r\n                        <select name=\"board-size\" id=\"board-size\" onChange={this.handleChangeBoard} defaultValue=\"5\">\r\n                            <option value=\"3\">3x3</option>\r\n                            <option value=\"5\">5x5</option>\r\n                            <option value=\"7\">7x7</option>\r\n                        </select>\r\n                    </div>\r\n                    <Button variant=\"solid\" text=\"Back\" onClick={this.handleBackToTitleScreen} />\r\n                </div>\r\n            </StyledDiv>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsScreen;","import React, { Component } from \"react\";\r\nimport Board from \"./components/Board\";\r\nimport styled from \"styled-components\";\r\n\r\nimport TitleScreen from './components/TitleScreen';\r\nimport ObjectivesScreen from './components/ObjectivesScreen';\r\nimport SettingsScreen from './components/SettingsScreen';\r\n\r\n/** Simple app that just shows the LightsOut game. */\r\nconst AppDiv = styled.div`\r\n  background-color: #303030;\r\n  color: #fff;\r\n  font-size: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100vw;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  font-size: 0.625rem;\r\n  font-weight: 200;\r\n  padding: 0.5rem 0;\r\n`\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      gameStart: false,\r\n      objectives: false,\r\n      settings: false,\r\n      nrows: 5,\r\n      ncols: 5,\r\n      chanceLightStartsOn: 0.25, // value should be between 0 and 1\r\n    }\r\n    this.onGameStart = this.onGameStart.bind(this);\r\n    this.onObjectives = this.onObjectives.bind(this);\r\n    this.onSettings = this.onSettings.bind(this);\r\n    this.fromObjectives = this.fromObjectives.bind(this);\r\n    this.fromSettings = this.fromSettings.bind(this);\r\n    this.fromGameStart = this.fromGameStart.bind(this);\r\n    this.changeBoardSize = this.changeBoardSize.bind(this);\r\n  }\r\n\r\n  onGameStart() {\r\n    this.setState({gameStart : true});\r\n  }\r\n\r\n  onObjectives() {\r\n    this.setState({objectives : true});\r\n  }\r\n\r\n  onSettings() {\r\n    this.setState({settings : true});\r\n  }\r\n\r\n  fromObjectives() {\r\n    this.setState({objectives: false});\r\n  }\r\n\r\n  fromSettings() {\r\n    this.setState({settings: false});\r\n  }\r\n\r\n  fromGameStart() {\r\n    this.setState({gameStart: false});\r\n  }\r\n  \r\n  changeBoardSize(inp) {\r\n    this.setState({ nrows: inp, ncols: inp })\r\n  }\r\n\r\n  render() {\r\n    const { gameStart, objectives, settings, nrows, ncols, chanceLightStartsOn } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <AppDiv>\r\n          <TitleScreen \r\n            gameStart={gameStart}\r\n            objectives={objectives}\r\n            settings={settings}\r\n            onGameStart={this.onGameStart}\r\n            onObjectives={this.onObjectives}\r\n            onSettings={this.onSettings}\r\n          />\r\n          {gameStart && \r\n            <Board \r\n              nrows={nrows}\r\n              ncols={ncols}\r\n              chanceLightStartsOn={chanceLightStartsOn}\r\n              fromGameStart={this.fromGameStart}\r\n              onSettings={this.onSettings}\r\n            />}\r\n          {objectives  && <ObjectivesScreen fromObjectives={this.fromObjectives}/>}\r\n          {settings  && \r\n            <SettingsScreen \r\n              fromSettings={this.fromSettings} \r\n              changeBoardSize={this.changeBoardSize} \r\n              nrows={nrows} \r\n              ncols={ncols}\r\n            />}\r\n        </AppDiv>\r\n        <Footer> &copy; Eli Almario 2020</Footer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}